{"version":3,"file":"list.d.ts","sources":["C:/Users/MounaBouslah/Desktop/Seekmake/Main Project/material-dashboard-pro-angular-v2.4.1/node_modules/@angular/material/list/list.d.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { AfterContentInit, ElementRef, QueryList, OnChanges, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { CanDisableRipple, CanDisableRippleCtor, MatLine } from '@angular/material/core';\nimport { Subject } from 'rxjs';\n/** @docs-private */\ndeclare class MatListBase {\n}\ndeclare const _MatListMixinBase: CanDisableRippleCtor & typeof MatListBase;\n/** @docs-private */\ndeclare class MatListItemBase {\n}\ndeclare const _MatListItemMixinBase: CanDisableRippleCtor & typeof MatListItemBase;\nexport declare class MatNavList extends _MatListMixinBase implements CanDisableRipple, OnChanges, OnDestroy {\n    /** Emits when the state of the list changes. */\n    _stateChanges: Subject<void>;\n    ngOnChanges(): void;\n    ngOnDestroy(): void;\n    static ngAcceptInputType_disableRipple: BooleanInput;\n}\nexport declare class MatList extends _MatListMixinBase implements CanDisableRipple, OnChanges, OnDestroy {\n    private _elementRef;\n    /** Emits when the state of the list changes. */\n    _stateChanges: Subject<void>;\n    constructor(_elementRef: ElementRef<HTMLElement>);\n    _getListType(): 'list' | 'action-list' | null;\n    ngOnChanges(): void;\n    ngOnDestroy(): void;\n    static ngAcceptInputType_disableRipple: BooleanInput;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nexport declare class MatListAvatarCssMatStyler {\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nexport declare class MatListIconCssMatStyler {\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nexport declare class MatListSubheaderCssMatStyler {\n}\n/** An item within a Material Design list. */\nexport declare class MatListItem extends _MatListItemMixinBase implements AfterContentInit, CanDisableRipple, OnDestroy {\n    private _element;\n    private _isInteractiveList;\n    private _list?;\n    private _destroyed;\n    _lines: QueryList<MatLine>;\n    _avatar: MatListAvatarCssMatStyler;\n    _icon: MatListIconCssMatStyler;\n    constructor(_element: ElementRef<HTMLElement>, _changeDetectorRef: ChangeDetectorRef, navList?: MatNavList, list?: MatList);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled(): boolean;\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement(): HTMLElement;\n    static ngAcceptInputType_disableRipple: BooleanInput;\n}\nexport {};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;AAUA;;;;;;;;AAMA;;;;;;;;AAMA;;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;AAkBA;;"}