{"version":3,"sources":["C:/Users/MounaBouslah/Desktop/Seekmake/Main Project/material-dashboard-pro-angular-v2.4.1/node_modules/@angular/animations/fesm5/browser/testing.js"],"names":[],"mappings":"AAAA","file":"testing.js","sourcesContent":["/**\n * @license Angular v9.0.1\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __extends } from 'tslib';\nimport { AUTO_STYLE, NoopAnimationPlayer } from '@angular/animations';\nimport { ɵvalidateStyleProperty, ɵmatchesElement, ɵcontainsElement, ɵinvokeQuery, ɵallowPreviousPlayerStylesMerge } from '@angular/animations/browser';\n\n/**\n * @publicApi\n */\nvar MockAnimationDriver = /** @class */ (function () {\n    function MockAnimationDriver() {\n    }\n    MockAnimationDriver.prototype.validateStyleProperty = function (prop) { return ɵvalidateStyleProperty(prop); };\n    MockAnimationDriver.prototype.matchesElement = function (element, selector) {\n        return ɵmatchesElement(element, selector);\n    };\n    MockAnimationDriver.prototype.containsElement = function (elm1, elm2) { return ɵcontainsElement(elm1, elm2); };\n    MockAnimationDriver.prototype.query = function (element, selector, multi) {\n        return ɵinvokeQuery(element, selector, multi);\n    };\n    MockAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    MockAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var player = new MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers);\n        MockAnimationDriver.log.push(player);\n        return player;\n    };\n    MockAnimationDriver.log = [];\n    return MockAnimationDriver;\n}());\n/**\n * @publicApi\n */\nvar MockAnimationPlayer = /** @class */ (function (_super) {\n    __extends(MockAnimationPlayer, _super);\n    function MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers) {\n        var _this = _super.call(this, duration, delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.duration = duration;\n        _this.delay = delay;\n        _this.easing = easing;\n        _this.previousPlayers = previousPlayers;\n        _this.__finished = false;\n        _this.__started = false;\n        _this.previousStyles = {};\n        _this._onInitFns = [];\n        _this.currentSnapshot = {};\n        if (ɵallowPreviousPlayerStylesMerge(duration, delay)) {\n            previousPlayers.forEach(function (player) {\n                if (player instanceof MockAnimationPlayer) {\n                    var styles_1 = player.currentSnapshot;\n                    Object.keys(styles_1).forEach(function (prop) { return _this.previousStyles[prop] = styles_1[prop]; });\n                }\n            });\n        }\n        return _this;\n    }\n    /* @internal */\n    MockAnimationPlayer.prototype.onInit = function (fn) { this._onInitFns.push(fn); };\n    /* @internal */\n    MockAnimationPlayer.prototype.init = function () {\n        _super.prototype.init.call(this);\n        this._onInitFns.forEach(function (fn) { return fn(); });\n        this._onInitFns = [];\n    };\n    MockAnimationPlayer.prototype.finish = function () {\n        _super.prototype.finish.call(this);\n        this.__finished = true;\n    };\n    MockAnimationPlayer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.__finished = true;\n    };\n    /* @internal */\n    MockAnimationPlayer.prototype.triggerMicrotask = function () { };\n    MockAnimationPlayer.prototype.play = function () {\n        _super.prototype.play.call(this);\n        this.__started = true;\n    };\n    MockAnimationPlayer.prototype.hasStarted = function () { return this.__started; };\n    MockAnimationPlayer.prototype.beforeDestroy = function () {\n        var _this = this;\n        var captures = {};\n        Object.keys(this.previousStyles).forEach(function (prop) {\n            captures[prop] = _this.previousStyles[prop];\n        });\n        if (this.hasStarted()) {\n            // when assembling the captured styles, it's important that\n            // we build the keyframe styles in the following order:\n            // {other styles within keyframes, ... previousStyles }\n            this.keyframes.forEach(function (kf) {\n                Object.keys(kf).forEach(function (prop) {\n                    if (prop != 'offset') {\n                        captures[prop] = _this.__finished ? kf[prop] : AUTO_STYLE;\n                    }\n                });\n            });\n        }\n        this.currentSnapshot = captures;\n    };\n    return MockAnimationPlayer;\n}(NoopAnimationPlayer));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MockAnimationDriver, MockAnimationPlayer };\n"]}